[workspace]
members = ["crate/*"]
resolver = "2"

[profile.dev.package.backtrace]
opt-level = 3

[profile.dev]
# less code to include in binary
panic = 'abort'
# link time optimization using whole-program analysis
lto = false
# optimization over all code (better optimization, slower build)
codegen-units = 256
# optimization for size (more aggressive)
opt-level = 0
incremental = true
debug = true
debug-assertions = true
overflow-checks = true

[profile.release]
# less code to include in binary
panic = 'abort'
# link time optimization using whole-program analysis
lto = true
# optimization over all code (better optimization, slower build)
codegen-units = 1
# optimization for size (more aggressive)
opt-level = 'z'

[workspace.package]
version = "0.0.8"
authors = [
    "Jacobus Geluk <jacobus.geluk@ekgf.org>",
]
edition = "2021"
repository = "https://github.com/EKGF/terraform-aws-rdf-load"
readme = "./README.md"
keywords = ["digital-twin", "ekg", "knowledge-graph", "rdf", "aws"]
publish = false
rust-version = "1.75"

[workspace.dependencies]
#
# Local crates
#
ekg-aws-util = { path = "crate/ekg-aws-util" }
ekg-error = { path = "crate/ekg-error" }
ekg-identifier = { path = "crate/ekg-identifier" }
ekg-lfn-check = { path = "crate/ekg-lfn-check" }
ekg-lfn-invoke = { path = "crate/ekg-lfn-invoke" }
ekg-lfn-load = { path = "crate/ekg-lfn-load" }
ekg-util = { path = "crate/ekg-util" }
#
# Tracing & Logging
#
tracing = { version = "0.1", default-features = false, features = ["log"] }
tracing-subscriber = { version = "0.3.18", default-features = false, features = ["std", "fmt", "env-filter", "ansi"] }
test-log = { version = "0.2.14", default-features = false, features = ["trace"] }
#
# Error handling
#
thiserror = { version = "1.0.51", default-features = false, features = ["backtrace"] }
unreachable = "1.0.0"
simple-error = "0.3.0"
#
# Serialization
#
serde = { version = "1", features = [], default-features = false }
serde_json = { version = "1", default-features = false }
serde_path_to_error = { version = "0.1.11", default-features = false }
indoc = { version = "2", default-features = true }
#
# IRI stuff
#
iri-string = { version = "0.7.0", default-features = false, features = ["serde", "alloc"] }
iref = { version = "3.1.3", default-features = false, features = ["serde"] }
#
# RDF stuff
#
#rdf-store-rs = { version = "0.0.9", default-features = false, features = ["serde"], optional = true }
#
# Config stuff
#
ignore = { version = "0.4.21", default-features = false }
config = { version = "0.13.4", default-features = false, features = ["toml"] }
#
# Runtime stuff
#
tokio = { version = "1", default-features = false, features = ["macros", "full"] }
#
# AWS
#
lambda_runtime = { version = "0.9.0", default-features = true }
aws-config = { version = "1.1.1", default-features = true, features = ["behavior-version-latest"] }
aws-types = { version = "1.1.1", default-features = false }
aws-smithy-runtime-api = { version = "1.1.1", default-features = true }
aws-sdk-sfn = { version = "1.9.0", default-features = true, features = ["behavior-version-latest"] }
aws-sdk-neptune = { version = "1.10.0", default-features = true, features = ["behavior-version-latest"] }
aws-sdk-neptunedata = { version = "1.9.0", default-features = true, features = ["behavior-version-latest"] }
#
# HTTP Stuff
#
webpki-roots = "0.26.0"
rustls = "0.21"
hyper = { version = "0.14", default-features = false, features = ["client", "http2", "stream", "runtime"] }
hyper-rustls = { version = "0.24", default-features = false, features = ["http2", "tls12", "webpki-roots", "webpki-tokio", "logging"] }
